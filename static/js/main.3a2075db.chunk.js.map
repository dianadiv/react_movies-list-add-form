{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","valid","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","length","NewMovie","onAdd","count","setCount","titleValue","setTitleValue","descriptionValue","setDescriptionValue","imgUrlValue","setImgUrlValue","imdbUrlValue","setImdbUrlValue","imdbIdValue","setImdbIdValue","pattern","isValidImg","test","isValidImdb","onSubmit","preventDefault","x","newValue","disabled","App","moviesFromServer","allMovies","setAllMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"mSAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,gBCSpC,IAAMC,EAA6B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MAMI,IALJC,aAKI,MALIF,EAKJ,EAJJG,EAII,EAJJA,MAII,IAHJC,mBAGI,sBAHmBF,GAGnB,MAFJG,gBAEI,aADJC,gBACI,MADO,WAAQ,EACf,EACJ,EAAaC,oBAAS,2BAASP,EAAT,YAdfQ,KAAKC,SACTC,QAAQ,IACRC,MAAM,GAYa,IAAfC,EAAP,oBACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAWF,GAAWR,IAAaJ,EAOzC,OACE,sBAAKd,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAASJ,EAAlC,SACGV,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLL,GAAIA,EACJ,0BAAkBZ,GAClBb,UAAW+B,IAAW,QAAS,CAC7B,YAAaH,IAEfX,YAAaA,EACbH,MAAOA,EACPK,SAAU,SAAAa,GAAK,OAAIb,EAASa,EAAMC,OAAOnB,MAA1B,EACfoB,OAAQ,kBAAMP,GAAW,EAAjB,MAIXC,GACC,mBAAG5B,UAAU,iBAAb,mBAAkCe,EAAlC,mBA1BIC,GAASF,EAAMqB,OAAS,IAChB,cAAVpB,GAAmC,aAAVA,IA6B3B,mBAAGf,UAAU,iBAAb,2BAA0Ce,OAIjD,EC/DYqB,EAAW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MACzB,EAA0BjB,mBAAS,GAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAAoCnB,mBAAS,IAA7C,mBAAOoB,EAAP,KAAmBC,EAAnB,KACA,EAAgDrB,mBAAS,IAAzD,mBAAOsB,EAAP,KAAyBC,EAAzB,KACA,EAAsCvB,mBAAS,IAA/C,mBAAOwB,EAAP,KAAoBC,EAApB,KACA,EAAwCzB,mBAAS,IAAjD,mBAAO0B,EAAP,KAAqBC,EAArB,KACA,EAAsC3B,mBAAS,IAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KAGMC,EAAU,uKACVC,EAAaD,EAAQE,KAAKR,GAC1BS,EAAcH,EAAQE,KAAKN,GAoBjC,OACE,uBACE9C,UAAU,WAEVsD,SAtBJ,SAAsBtB,GACpBA,EAAMuB,iBACNd,EAAc,IACdE,EAAoB,IACpBE,EAAe,IACfE,EAAgB,IAChBE,EAAe,IACfV,GAAS,SAACiB,GAAD,OAAOA,EAAI,CAAX,IAETnB,EAAM,CACJjC,MAAOoC,EACPnC,YAAaqC,EACbxC,OAAQ0C,EACRrC,QAASuC,EACTnC,OAAQqC,GAEX,EAGC,UAKE,oBAAIhD,UAAU,QAAd,yBAEA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAO0B,EACPrB,SAAU,SAACsC,GAAD,OAAchB,EAAcgB,EAA5B,EACVvC,UAAQ,IAGV,cAAC,EAAD,CACEL,KAAK,cACLE,MAAM,cACND,MAAO4B,EACPvB,SAAU,SAACsC,GAAD,OAAcd,EAAoBc,EAAlC,IAGZ,cAAC,EAAD,CACE5C,KAAK,SACLE,MAAM,YACNC,MAAOmC,EACPrC,MAAO8B,EACPzB,SAAU,SAACsC,GAAD,OAAcZ,EAAeY,EAA7B,EACVvC,UAAQ,IAGV,cAAC,EAAD,CACEL,KAAK,UACLE,MAAM,WACNC,MAAOqC,EACPvC,MAAOgC,EACP3B,SAAU,SAACsC,GAAD,OAAcV,EAAgBU,EAA9B,EACVvC,UAAQ,IAGV,cAAC,EAAD,CACEL,KAAK,SACLE,MAAM,UACND,MAAOkC,EACP7B,SAAU,SAACsC,GAAD,OAAcR,EAAeQ,EAA7B,EACVvC,UAAQ,IAGV,qBAAKlB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL,UAAQ,gBACR9B,UAAU,iBACV0D,UACGlB,IAAeI,IAAgBE,IAC5BE,IAAgBK,IAAgBF,EANxC,uBAhDCb,EA+DV,E,OC9FYqB,EAAM,WACjB,MAAkCvC,mBAASwC,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,OACE,sBAAK9D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQoD,MAEtB,qBAAK7D,UAAU,UAAf,SACE,cAAC,EAAD,CAAUqC,MAAO,SAACtC,GAAD,OAVRgE,EAUgChE,OAT7C+D,EAAa,GAAD,mBAAKD,GAAL,CAAgBE,KAD9B,IAAeA,CAUQ,QAIxB,ECpBDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.3a2075db.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  valid?: boolean,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  valid,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  function checkIfValid() {\n    return !valid && value.length > 1\n      && (label === 'Image URL' || label === 'Imdb URL');\n  }\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {checkIfValid() && (\n        <p className=\"help is-danger\">{`Invalid ${label}`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\nexport const NewMovie = ({ onAdd }: { onAdd: (movie: Movie) => void }) => {\n  const [count, setCount] = useState(0);\n  const [titleValue, setTitleValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [imgUrlValue, setImgUrlValue] = useState('');\n  const [imdbUrlValue, setImdbUrlValue] = useState('');\n  const [imdbIdValue, setImdbIdValue] = useState('');\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n  const isValidImg = pattern.test(imgUrlValue);\n  const isValidImdb = pattern.test(imdbUrlValue);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    setTitleValue('');\n    setDescriptionValue('');\n    setImgUrlValue('');\n    setImdbUrlValue('');\n    setImdbIdValue('');\n    setCount((x) => x + 1);\n\n    onAdd({\n      title: titleValue,\n      description: descriptionValue,\n      imgUrl: imgUrlValue,\n      imdbUrl: imdbUrlValue,\n      imdbId: imdbIdValue,\n    });\n  }\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={titleValue}\n        onChange={(newValue) => setTitleValue(newValue)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descriptionValue}\n        onChange={(newValue) => setDescriptionValue(newValue)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        valid={isValidImg}\n        value={imgUrlValue}\n        onChange={(newValue) => setImgUrlValue(newValue)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        valid={isValidImdb}\n        value={imdbUrlValue}\n        onChange={(newValue) => setImdbUrlValue(newValue)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbIdValue}\n        onChange={(newValue) => setImdbIdValue(newValue)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={\n              !titleValue || !imgUrlValue || !imdbUrlValue\n              || !imdbIdValue || !isValidImdb || !isValidImg\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [allMovies, setAllMovies] = useState(moviesFromServer);\n\n  function onAdd(newMovie: Movie) {\n    setAllMovies([...allMovies, newMovie]);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={allMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie: Movie) => onAdd(movie)} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}